<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.triple.mileage.api.common.mapper.MemberMapper">

    <sql id="selectFrom">
        SELECT 
            `member`.`id`, 
            `member`.`user_id`,
            `member`.`pw`,
            `member`.`nickname`,
            `member`.`point`
        FROM 
            `member` `member` 
    </sql>

    <sql id="where">
        <where>
        </where>
    </sql>

    <resultMap id="memberResultMap" type="com.triple.mileage.api.common.entity.MemberEntity">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="pw" column="pw"/>
        <result property="nickname" column="nickname"/>
        <result property="point" column="point"/>
    </resultMap>

    <select
        id="selectMemberList"
        parameterType="java.util.Map"
        resultMap="memberResultMap"
    >
        <include refid="PageFragment.sortStart"/>
        <include refid="selectFrom"/>
        <include refid="where"/>
        <include refid="PageFragment.sortEnd"/>
        <include refid="PageFragment.limitOffset"/>
    </select>

    <select
        id="selectMemberListCount"
        parameterType="java.util.Map"
        resultType="java.lang.Integer"
    >
        <include refid="PageFragment.countStart"/>
        <include refid="selectFrom"/>
        <include refid="where"/>
        <include refid="PageFragment.countEnd"/>
    </select>

    <select
        id="selectMember"
        parameterType="java.util.Map"
        resultMap="memberResultMap"
    >
        <include refid="selectFrom"/>
        WHERE
            `member`.`id` = #{id}
    </select>

    <select
        id="selectLoginMember"
        parameterType="java.util.Map"
        resultMap="memberResultMap"
    >
        <include refid="selectFrom"/>
        WHERE
            `member`.`user_id` = #{memberEntity.userId}
        AND
            `member`.`pw` = #{memberEntity.pw}
    </select>

    <insert id="insertMember" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `member` (
            `user_id`, 
            `pw`,
            `nickname`
        ) VALUES (
            #{memberEntity.userId}, 
            #{memberEntity.pw}, 
            #{memberEntity.nickname}
        )
    </insert>

    <insert id="updateMember" parameterType="java.util.Map">
        INSERT INTO `member` (
            `id`,
            `user_id`, 
            `pw`,
            `nickname`,
            `point`
        ) VALUES (
            #{memberEntity.id}, 
            #{memberEntity.userId}, 
            #{memberEntity.pw}, 
            #{memberEntity.nickname},
            #{memberEntity.point}
        )
        ON DUPLICATE KEY UPDATE 
            `user_id` = VALUES(`user_id`), 
            `pw` = VALUES(`pw`),  
            `nickname` = VALUES(`nickname`),
            `point` = VALUES(`point`)
    </insert>

    <delete id="deleteMember" parameterType="java.util.Map">
        DELETE FROM `member`
        WHERE 
            `id` = #{id} 
    </delete>
</mapper>
